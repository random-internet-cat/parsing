    auto tokenizer = p::make_simple_tokenizer<token>(p::simple_token_descriptor(token(token_kind::colon_colon), "::"),
                                                     p::simple_token_descriptor(token(token_kind::lparen), "("),
                                                     p::simple_token_descriptor(token(token_kind::rparen), ")"),
                                                     p::simple_token_descriptor(token(token_kind::colon), ":"),
                                                     p::simple_token_descriptor(token(token_kind::carat), "^"),
                                                     p::simple_token_descriptor(token(token_kind::plus), "+"),
                                                     p::simple_token_descriptor(token(token_kind::plus_plus), "++"),
                                                     p::simple_token_descriptor(token(token_kind::minus), "-"),
                                                     p::simple_token_descriptor(token(token_kind::minus_minus), "--"),
                                                     p::simple_token_descriptor(token(token_kind::semicolon), ";"),
                                                     p::simple_token_descriptor(token(token_kind::slash), "/"),
                                                     p::simple_token_descriptor(token(token_kind::slash_slash), "//"),
                                                     p::simple_token_descriptor(token(token_kind::slash_star), "/*"),
                                                     p::simple_token_descriptor(token(token_kind::star_slash), "*/"),
                                                     p::simple_token_descriptor(token(token_kind::star), "*"),
                                                     p::simple_token_descriptor(token(token_kind::ampersand), "&"),
                                                     p::simple_token_descriptor(token(token_kind::ampersand_ampersand), "&&"),
                                                     p::simple_token_descriptor(token(token_kind::pipe), "|"),
                                                     p::simple_token_descriptor(token(token_kind::tilde), "~"),
                                                     p::simple_token_descriptor(token(token_kind::percentage), "%"),
                                                     p::simple_token_descriptor(token(token_kind::pipe_pipe), "||"),
                                                     p::simple_token_descriptor(token(token_kind::question_mark), "?"),
                                                     p::simple_token_descriptor(token(token_kind::backslash), "\\"),
                                                     p::simple_token_descriptor(token(token_kind::period), "."),
                                                     p::make_multi_form_token_descriptor(token(token_kind::whitespace), 1, " ", "\t"),
                                                     p::make_multi_form_token_descriptor(token(token_kind::newline), 1, "\n", "\r"),
                                                     identifier_token_desc(),
                                                     string_literal_token_desc(),
                                                     invalid_token_desc(),
                                                     raw_string_literal_token_desc(),

#define KW(x) (keyword_parser(token_kind::kw_##x, #x))
                                                     KW(asm),
                                                     KW(auto),
                                                     KW(bool),
                                                     KW(break),
                                                     KW(case),
                                                     KW(catch),
                                                     KW(char),
                                                     KW(char8_t),
                                                     KW(char16_t),
                                                     KW(class),
                                                     KW(const),
                                                     KW(const_cast),
                                                     KW(continue),
                                                     KW(default),
                                                     KW(delete),
                                                     KW(do),
                                                     KW(double),
                                                     KW(dynamic_cast),
                                                     KW(else),
                                                     KW(enum),
                                                     KW(explicit),
                                                     KW(extern),
                                                     KW(false),
                                                     KW(float));
#undef KW